"use strict";

/**
 * 2次元配列を2重ループを用いて処理する。
 * 表示と回転。
 */

// 2 次元配列の初期化
let gaaGrid = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0],
    [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],
    [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],
    [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0],
    [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0],
    [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
    [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
];
window.onload = function () {
    disp();
    rotation();
    disp();
}
// 2 次元配列を表示する
function disp() {
    for (let y = 0; y < gaaGrid.length; y++) {
        for (let x = 0; x < gaaGrid[y].length; x++) {
            if (gaaGrid[y][x]) {
                document.write("■"); // ■← しかくで変換できます
            } else {
                document.write("　"); // 全角スペース
            }
        }
        document.write("<br />");
    }
}

//2次元配列を時計回りに回転する
function rotation() {
    //ディープコピー
    let aaTmp = structuredClone(gaaGrid);

    //配列の回転
    for (let y = 0; y < gaaGrid.length; y++) {
        for (let x = 0; x < gaaGrid[y].length; x++) {
            gaaGrid[y][x] = aaTmp[15 - x][y];
        }
    }
}